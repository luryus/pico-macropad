.program key_matrix


start:
    // Read the input pins with drive pin 0
    set pins 0b001
    in pins, 4

    // Read the input pins with drive pin 1
    set pins 0b010
    in pins, 4

    // Read the input pins with drive pin 2
    set pins 0b100
    in pins, 4

    set pins 0b000

    // Check if the value changed from previous iteration
    mov y isr
    jmp x!=y emit

    // No change detected, clear isr and start from beginning
    in null, 32
    jmp start

emit:
    push noblock
    mov x y


% c-sdk {

static inline void key_matrix_pio_init(
    PIO pio, uint8_t sm, uint8_t offset, uint8_t row_pin, uint8_t col_pin)
{
    pio_sm_config conf = key_matrix_program_get_default_config(offset);

    // Set row pins as outputs
    for (int i = 0; i < 3; i++) {
        pio_gpio_init(pio, row_pin + i);
    }
    pio_sm_set_consecutive_pindirs(pio, sm, row_pin, 3, true);
    sm_config_set_set_pins(&conf, row_pin, 3);

    // Set col pins as inputs
    pio_sm_set_consecutive_pindirs(pio, sm, col_pin, 4, false);
    sm_config_set_in_pins(&conf, col_pin);
    for (int i = 0; i < 4; i++) {
        gpio_pull_down(col_pin + i);
    }

    // Shift to left
    sm_config_set_in_shift(&conf, false, false, 32);
    
    sm_config_set_clkdiv_int_frac(&conf, 4000, 0);

    pio_sm_init(pio, sm, offset, &conf);

    pio_sm_set_enabled(pio, sm, true);
}


%}